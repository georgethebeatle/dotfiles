---
- hosts: all
  tasks:
  - name: install Plug
    shell: sh -c "$(curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim)"

  - name: install/update vim plugins and binaries
    command: nvim --headless +PlugInstall +PlugUpdate +GoUpdateBinaries +qall

  - name: update remote plugins
    command: nvim --headless +UpdateRemotePlugins +qall

  - name: check if oh-my-zsh is installed
    stat: path=~/.oh-my-zsh
    register: ohmyzsh

  - name: install oh-my-zsh unless already installed
    shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    when: not ohmyzsh.stat.exists

  - name: install zsh-z plugin
    git:
      repo: https://github.com/agkozak/zsh-z
      dest: ~/.oh-my-zsh/custom/plugins/zsh-z
      force: yes

  - name: check if ibmcloud cli is installed
    command: command -v ibmcloud
    register: ibmcloud_check
    ignore_errors: True

  - name: install ibmcloud cli unless already installed
    shell: curl -sL https://ibm.biz/idt-installer | /bin/bash
    when: ibmcloud_check.failed

  - name: check if dhall lsp server is installed
    command: command -v dhall-lsp-server
    register: dhall_lsp_check
    ignore_errors: True

  - name: install dhall lsp server unless already installed
    unarchive:
      src: "https://github.com/dhall-lang/dhall-haskell/releases/download/1.27.0/dhall-lsp-server-1.0.2-x86_64-macos.tar.bz2"
      dest: /usr/local
      remote_src: yes
    when: dhall_lsp_check.failed

  - name: install concourse-flake-hunter
    command: go get -u github.com/masters-of-cats/concourse-flake-hunter

  - name: install counterfeiter
    command: go get -u github.com/maxbrunsfeld/counterfeiter

  - name: get TPM
    git:
      repo: https://github.com/tmux-plugins/tpm
      dest: ~/.tmux/plugins/tpm

  - name: install github-auth
    command: "gem install github-auth"

  - file: path=~/bin state=directory mode=0755

  - name: create nvim config dir
    file:
      path: ~/.config/nvim
      state: directory

  - name: recursively find all config dirs under 'config/'
    find:
      paths: config
      recurse: yes
      hidden: yes
      file_type: directory
    register: config_dirs

  - name: ensure all conf dirs exist
    file:
      path: "{{ ansible_env.HOME }}/{{ item | regex_replace('^config/', '') }}"
      state: directory
    with_items: "{{ config_dirs.files | map(attribute='path') | list }}"

  - name: recursively find all config files under 'config/'
    find:
      paths: config
      recurse: yes
      hidden: yes
    register: config

  - name: symlink config files
    file:
      path: "{{ ansible_env.HOME }}/{{ item | regex_replace('^config/', '') }}"
      src: "{{ansible_env.PWD }}/{{ item }}"
      state: link
      force: yes
    with_items: "{{ config.files | map(attribute='path') | list }}"

  - name: ~/.gitconfig
    blockinfile:
      path: ~/.gitconfig
      create: yes
      block: |
        [include]
          path = ~/.gitconfig-shared
